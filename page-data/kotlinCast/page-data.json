{"componentChunkName":"component---src-templates-blog-post-js","path":"/kotlinCast/","result":{"data":{"site":{"siteMetadata":{"title":"Camveloper blog"}},"markdownRemark":{"id":"d2977c01-e7d5-5d13-8a73-d40968e529c0","excerpt":"스마트 캐스트 스마트 캐스트는 is로 변수에 든 값의 타입을 검사한 다음에 그 값이 바뀔 수 없는 경우에만 작동한다. <1>은 입력 하지 않아도 에러가 발생 되지 않는다. <2> 와같이 형변환 없이도 사용이 가능하다.\n그것은 if…","html":"<h1>스마트 캐스트</h1>\n<p>스마트 캐스트는 is로 변수에 든 값의 타입을 검사한 다음에 그 값이 바뀔 수 없는 경우에만 작동한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">interface</span> Expr\n\n<span class=\"token keyword\">class</span> <span class=\"token function\">Num</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> value<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Expr\n\n<span class=\"token keyword\">class</span> <span class=\"token function\">Sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> left<span class=\"token operator\">:</span> Expr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">val</span> right<span class=\"token operator\">:</span> Expr<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Expr\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> Expr<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Int<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">is</span> Num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">val</span> n <span class=\"token operator\">=</span> e <span class=\"token keyword\">as</span> Num <span class=\"token operator\">&lt;</span><span class=\"token number\">1</span><span class=\"token operator\">></span>\n        <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span>value\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> e <span class=\"token keyword\">is</span> Sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"Unknown expression\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">Sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">Sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">Num</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Num</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Num</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>&#x3C;1>은 입력 하지 않아도 에러가 발생 되지 않는다. &#x3C;2> 와같이 형변환 없이도 사용이 가능하다.\n그것은 if 조건문에서 <code class=\"language-text\">is</code>를 통해 스마트 캐스트가 되어 블럭 안에서 이미 캐스트가 된 상태이다.</p>\n<h1>일반적 명시 캐스트</h1>\n<p>명시적으로 타입 캐스팅 하려면 <code class=\"language-text\">as</code> 키워드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> n <span class=\"token operator\">=</span> e <span class=\"token keyword\">as</span> Num</code></pre></div>\n<p>해당값이 어떤 형태인지 확실 하다면 <code class=\"language-text\">as</code>를 사용하면 되지만, 불명확 하다면 메소드를 호출 하여야 한다.\n예를 들어 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> str<span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"72\"</span></span>\n<span class=\"token keyword\">val</span> number<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>공부한 책</h2>\n<ul>\n<li>코틀린 인 액션</li>\n</ul>","frontmatter":{"title":"코틀린의 캐스트","date":"September 13, 2020","description":"코틀린의 캐스트 하는 방법을 알아 본다."}}},"pageContext":{"slug":"/kotlinCast/","previous":{"fields":{"slug":"/dockerExecution/"},"frontmatter":{"title":"Docker로 어플리케이션 실행하기"}},"next":{"fields":{"slug":"/async-nonblocking/"},"frontmatter":{"title":"비동기 논블로킹"}}}},"staticQueryHashes":["2079442891","2841359383"],"slicesMap":{}}